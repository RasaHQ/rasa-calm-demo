
metadata:
  - x_caller_identity:
      language: English
      location: Europe
      id: "63452dc5a5aed9510e95322f"
      tenantType: "COMPANY"
      tenantId: "5ec29a9a42d10456a0930b10"
      description: null
      onBehalfOf: null
      companyId: "5ec29a9a42d10456a0930b10"
      externalId: "5000000653782528"
      companyExternalId: "5250000000585472"
      accountId: null
      type: "EMPLOYEE"
      role: "ADMINISTRATOR"

stub_custom_actions:
  action_reset_slots:
    responses:
      - text: "All slots have been reset."

  action_ask_schedule_interview_job_index:
    events:
      - event: slot
        name: job_title
        value: Senior Java Developer
      - event: slot
        name: schedule_interview_found_jobs
        value: [{"name": "Cook", externalId: "5420000060699100"},{"name": "Senior Java Developer", externalId: "5420000060699136"}]
      - event: slot
        name: schedule_interview_found_job_count
        value: 2
    responses:
      - text: "Excellent let's do it! \n I found 2 jobs where you're part of the hiring team! Which one do you want to schedule interviews for?"
  validate_schedule_interview_job_index:
    events:
      - event: slot
        name: job_title
        value: Senior Java Developer
      - event: slot
        name: schedule_interview_job
        value: {"name": "Senior Java Developer", externalId: "5420000060699136"}
  action_get_job_details:
    events:
      - event: slot
        name: job_id
        value: 5420000060699136
      - event: slot
        name: job_title
        value: "Data Scientist"
      - event: slot
        name: location
        value: "Berlin"
      - event: slot
        name: job_creation_date
        value: "2020-10-16T10:14:20+00:00"
      - event: slot
        name: job_state
        value: "ACTIVE"
      - event: slot
        name: job_geo_coordinates
        value: {"latitude": 47.4978504, "longitude": 19.0544444}

  action_ask_search_filter_criteria:
    events:
      - event: slot
        name: search_filter_criteria
        value: from_llm  # value comes from llm
    responses:
        - text: "Which criteria do you want to use to filter candidates (city, star, radius, etc.)?Please select one of the criteria below or provide your own by typing it."

  action_ask_number_of_candidates_to_interview_with:
    events:
      - event: slot
        name: number_of_candidates_to_interview_with
        value: from_llm
    responses:
        - text: "Your selected criteria was city: Berlin.\n Based on it I found a total of 394 candidates available for interviews. How many candidates would you like to shortlist for an interview for the Data Scientist role?"

  action_get_candidate_ids:
    events:
      - event: slot
        name: retrieved_candidates_count
        value: 5

  action_ask_selected_candidates_positions:
    events:
      - event: slot
        name: selected_candidates_positions
        value: from_llm
    responses:
      - text: "Would you like to schedule an interview with all the shortlisted candidates? If no, which candidates would you like to select for an interview?"

  action_get_interviewer_timezone:
    events:
      - event: slot
        name: interviewer_id
        value: "64b121702d38496aafa056c2"
      - event: slot
        name: interviewer_timezone
        value: "America/New_York"

  action_ask_weeks_until_interview:
    events:
      - event: slot
        name: weeks_until_interview
        value: from_llm
    responses:
        - text: "Could you kindly specify your available day and time for an interview?"

  action_ask_interview_duration:
    events:
      - event: slot
        name: interview_duration
        value: from_llm
    responses:
        - text: "What should the duration of the interview be?"

  action_calculate_interviewer_availability:
    events:
      - event: slot
        name: interview_weekday_time
        value: from_llm

  action_get_email_template:
    events:
      - event: slot
        name: email_subject
        value: "Dummy email subject"
      - event: slot
        name: email_body
        value: "Dummy email body"

  action_ask_interview_type:
    events:
      - event: slot
        name: interview_type
        value: from_llm
    responses:
      - text: "Please select the interview type."

  action_schedule_interview:
    responses:
      - text: "Self-scheduling email has been successfully sent."

  action_build_self_schedule_confirmation_message:
    events:
      - event: slot
        name: final_self_schedule_confirmation
        value: from_llm
    responses:
      - text: "Got it, I'll send out the self-scheduling link for Hiring Manager Screen to these candidates:"


test_cases:
  - test_case: Basic happy path for scheduling an interview
    metadata: x_caller_identity
    steps:
    - user: "schedule_interviews"
    - user: "data scientist"
    - slot_was_set:
      - job_title: Data Scientist
    - utter: utter_found_job
    - slot_was_set:
      - job_id: 5420000060699136
      - job_title: "Data Scientist"
      - location: "Berlin"
      - job_creation_date: "2020-10-16T10:14:20+00:00"
      - job_state: "ACTIVE"
      - job_geo_coordinates: {"latitude": 47.4978504, "longitude": 19.0544444}
    - bot: "Which criteria do you want to use to filter candidates (city, star, radius, etc.)?Please select one of the criteria below or provide your own by typing it."
    - user: "Hmmm, I think I want the candidates who live in Berlin"
    # FIXME string value from llm is returned sometimes as `SingleQuotedScalarString` and sometimes as `DoubleQuotedScalarString`
    # - slot_was_set:
    #   - search_filter_criteria: '{"city": "Berlin"}'
    - bot: "Your selected criteria was city: Berlin.\n Based on it I found a total of 394 candidates available for interviews. How many candidates would you like to shortlist for an interview for the Data Scientist role?"
    - user: "5"
    - slot_was_set:
      - number_of_candidates_to_interview_with: 5.0
    # FIXME
    # - utter: utter_found_candidates
    - slot_was_set:
      - retrieved_candidates_count: 5
    - utter: utter_ask_selected_candidates_positions
    - user: "Just the first one"
    # FIXME string value from llm is returned sometimes as `SingleQuotedScalarString` and sometimes as `DoubleQuotedScalarString`
    # - slot_was_set:
    #   - selected_candidates_positions: "[1]"
    - user: "next week"
    - slot_was_set:
      - weeks_until_interview: 1.0
    - utter: utter_ask_interview_weekday_time
    - user: "Tuesday and Thursday between 15h and 17h"
    - slot_was_set:
      - interview_weekday_time: "[('Tuesday', '15:00', '17:00'), ('Thursday', '15:00', '17:00')]"
    - bot: "What should the duration of the interview be?"
    - user: "60mins"
    - slot_was_set:
      - interview_duration: "60"
    - bot: "Please select the interview type."
    - user: "Hiring Manager Screen"
    - slot_was_set:
      - interview_type: "Hiring Manager Screen"
    # We'd need to use regex to match the end bot's response, because the dates are dynamic based on the current date.
    # Also, it would be nice to send actual self-scheduling request to real email, but we need to discuss inside a team
    # which (or if there is even any) email to use for this purpose.

    - bot: "Got it, I'll send out the self-scheduling link for Hiring Manager Screen to these candidates:"
    - utter: utter_ask_final_self_schedule_confirmation
    - user: "Yeah"
    - bot: "Self-scheduling email has been successfully sent."
