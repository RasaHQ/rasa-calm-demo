recipe: default.v1
language: en
pipeline:
- name: LLMBasedRouter
  calm_entry:
    sticky: "handles everything else, including finance and pizza orders"
  nlu_entry:
    sticky: "handles everything around health advice and hotel or restaurant bookings"
    non_sticky: "handles chitchat"
- name: WhitespaceTokenizer
- name: CountVectorsFeaturizer
- name: CountVectorsFeaturizer
  analyzer: char_wb
  min_ngram: 1
  max_ngram: 4
- name: LogisticRegressionClassifier
  max_iter: 100
  solver: lbfgs
  tol: 0.0001
  random_state: 42
  ranking_length: 10
- name: CRFEntityExtractor
- name: DucklingEntityExtractor
  url: "http://localhost:8000"
  dimensions: [ "time", "number" ]
  timezone: "Europe/Berlin"
  timeout: 3
- name: NLUCommandAdapter
- name: SearchReadyLLMCommandGenerator
  llm:
    model_group: openai-direct-gpt-4o

policies:
- name: RulePolicy
- name: TEDPolicy
  constrain_similarities: true
- name: FlowPolicy
- name: EnterpriseSearchPolicy
  #use_generative_llm: false
  #prompt: rag.jinja2
  vector_store:
    type: "addons.qdrant.Qdrant_Store"
  embeddings:
    model_group: openai-embeddings
- name: IntentlessPolicy

assistant_id: 20240418-073244-narrow-archive
