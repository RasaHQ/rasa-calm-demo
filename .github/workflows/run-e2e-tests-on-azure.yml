name: Run e2e tests on azure
# This workflow runs `e2e_tests/passing/happy_path` and `e2e_tests/passing/chitchat` tests
# using azure openai configurations
# the config files are located on the branch `azure-openai-release-3.9`
# the workflow checks out the `azure-openai-release-3.9` branch and runs the tests.

on:
  schedule:
    # Run cron job at 8AM Monday every week.
    - cron: '0 8 * * 1'
  workflow_dispatch:

env:
  DEFAULT_PYTHON_VERSION: '3.9'
  POETRY_VERSION: 1.8.2

jobs:
  train-model-and-run-tests:
    name: Train model
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout git repository üïù
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
        with:
          ref: azure-openai-release-3.9

      - name: Setup Python
        uses: actions/setup-python@57ded4d7d5e986d7296eab16560982c6dd7c923b
        with:
          python-version: ${{ env.DEFAULT_PYTHON_VERSION }}

      - name: Install poetry ü¶Ñ
        uses: Gr1N/setup-poetry@15821dc8a61bc630db542ae4baf6a7c19a994844
        with:
          poetry-version: ${{ env.POETRY_VERSION }}

      - name: Load Poetry Cached Libraries ‚¨á
        id: cache-poetry
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57
        with:
          path: .venv
          key: ${{ runner.os }}-poetry-${{ env.POETRY_VERSION }}-${{ env.DEFAULT_PYTHON_VERSION }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: ${{ runner.os }}-poetry-${{ env.DEFAULT_PYTHON_VERSION }}

      - name: Create virtual environment
        if: steps.cache-poetry.outputs.cache-hit != 'true'
        run: python -m venv create .venv

      - name: Set up virtual environment
        run: poetry config virtualenvs.in-project true

      - name: Install Dependencies üì¶
        run: |
          make install

      - name: Train model
        env:
          OPENAI_API_KEY: ${{secrets.AZURE_OPENAI_API_KEY}}
          RASA_PRO_LICENSE: ${{secrets.RASA_PRO_LICENSE}}
          RASA_PRO_BETA_INTENTLESS: true
          RASA_DUCKLING_HTTP_URL: ${{secrets.DUCKLING_URL}}
        run: |
          make train

      - name: Persist model
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 #v4.4.3
        with:
          name: trained-model
          path: models/${{steps.upload_model.outputs.model}}.tar.gz

      - name: Init LLM Cache
        id: cache-llm
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57
        with:
          path: .rasa
          key: rasa-llm-cache

      - name: Run action server
        env:
          OPENAI_API_KEY: ${{secrets.AZURE_OPENAI_API_KEY}}
          RASA_PRO_LICENSE: ${{secrets.RASA_PRO_LICENSE}}
          RASA_DUCKLING_HTTP_URL: ${{secrets.DUCKLING_URL}}
          RASA_PRO_BETA_INTENTLESS: true
        run: |
          make actions &

      - name: Run e2e happy_path tests
        env:
          OPENAI_API_KEY: ${{secrets.AZURE_OPENAI_API_KEY}}
          RASA_PRO_LICENSE: ${{secrets.RASA_PRO_LICENSE}}
          RASA_DUCKLING_HTTP_URL: ${{secrets.DUCKLING_URL}}
          RASA_PRO_BETA_INTENTLESS: true
        run: |
          poetry run rasa test e2e e2e_tests/passing/happy_path

      - name: Run e2e chitchat tests
        if: always()
        env:
          OPENAI_API_KEY: ${{secrets.AZURE_OPENAI_API_KEY}}
          RASA_PRO_LICENSE: ${{secrets.RASA_PRO_LICENSE}}
          RASA_DUCKLING_HTTP_URL: ${{secrets.DUCKLING_URL}}
          RASA_PRO_BETA_INTENTLESS: true
        run: |
          poetry run rasa test e2e e2e_tests/passing/chitchat
      